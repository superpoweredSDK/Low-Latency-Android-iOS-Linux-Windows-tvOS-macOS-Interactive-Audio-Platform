// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bindings for `src/superpowered_player_with_effects.h`.
///
/// Regenerate bindings with `flutter pub run ffigen --config ffigen.yaml`.
///
class SuperpoweredPlayerWithEffectsBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  SuperpoweredPlayerWithEffectsBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  SuperpoweredPlayerWithEffectsBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void initialize(
    ffi.Pointer<ffi.Char> tempDir,
  ) {
    return _initialize(
      tempDir,
    );
  }

  late final _initializePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>(
          'initialize');
  late final _initialize =
      _initializePtr.asFunction<void Function(ffi.Pointer<ffi.Char>)>();

  void playerDispose() {
    return _playerDispose();
  }

  late final _playerDisposePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>('playerDispose');
  late final _playerDispose = _playerDisposePtr.asFunction<void Function()>();

  void togglePlayback() {
    return _togglePlayback();
  }

  late final _togglePlaybackPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>('togglePlayback');
  late final _togglePlayback = _togglePlaybackPtr.asFunction<void Function()>();

  void enableFlanger(
    bool enable,
  ) {
    return _enableFlanger(
      enable,
    );
  }

  late final _enableFlangerPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Bool)>>('enableFlanger');
  late final _enableFlanger = _enableFlangerPtr.asFunction<void Function(bool)>();
}
